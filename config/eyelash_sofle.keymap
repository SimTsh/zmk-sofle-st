#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1        &kp N2        &kp N3          &kp N4  &kp N5       &kp PAGE_UP    &kp N6         &kp N7  &kp N8           &kp N9   &kp N0          &kp LEFT_BRACKET
&kp TAB     &kp Q         &kp W         &kp E           &kp R   &kp T        &kp PAGE_DOWN  &kp Y          &kp U   &kp I            &kp O    &kp P           &kp RIGHT_BRACKET
&kp CAPS    &kp A         &kp S         &kp D           &kp F   &kp G        &kp HOME       &kp H          &kp J   &kp K            &kp L    &mt SEMI COLON  &kp APOS
&kp LCTRL   &kp Z         &kp X         &kp C           &kp V   &kp B        &kp END        &kp N          &kp M   &kp COMMA        &kp DOT  &kp FSLH        &kp ENTER
&kp C_MUTE  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT  &mo 1   &kp SPACE    &kp INSERT     &kp BACKSPACE  &mo 2   &kp RIGHT_SHIFT  &mo 4    &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Alphabet";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1                 &kp F2     &kp F3     &kp F4     &kp F5                  &mmv MOVE_UP     &kp F6        &kp F7  &kp F8  &kp F9   &kp F10    &kp F11
&trans      &kp RIGHT_PARENTHESIS  &kp HOME   &kp UP     &kp END    &kp LEFT_PARENTHESIS    &mmv MOVE_DOWN   &kp MINUS     &kp N7  &kp N8  &kp N9   &kp PG_UP  &kp F12
&kp INSERT  &kp RBKT               &kp LEFT   &kp DOWN   &kp RIGHT  &kp LBKT                &mmv MOVE_LEFT   &kp PLUS      &kp N4  &kp N5  &kp N6   &kp PG_DN  &trans
&kp RETURN  &kp LC(Z)              &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp SINGLE_QUOTE        &mmv MOVE_RIGHT  &kp ASTERISK  &kp N1  &kp N2  &kp N3   &kp BSLH   &kp DEL
&mkp MB3    &trans                 &trans     &trans     &trans     &trans                  &mkp LCLK        &kp RSHFT     &trans  &kp N0  &kp DOT  &kp EQUAL
            >;

            display-name = "Nav&Num";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &trans        &trans                          &trans                &trans                      &trans                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS     &mt PIPE RS(AMPS)               &kp MINUS             &mt GREATER_THAN LESS_THAN  &mt LEFT_PARENTHESIS RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp PLUS      &mt DOUBLE_QUOTES SINGLE_QUOTE  &kp UNDERSCORE        &kp EQUAL                   &mt LEFT_BRACKET RIGHT_BRACKET            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ASTERISK  &mt SLASH BACKSLASH             &mt PERCENT QUESTION  &mt DOT ASTERISK            &mt LEFT_BRACE RIGHT_BRACE                &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans                          &trans                &trans                      &mt TAB RETURN                            &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Symbols";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans          &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &studio_unlock  &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader     &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans          &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "Controls";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "layer4";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
